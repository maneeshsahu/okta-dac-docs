(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{312:function(e,t,a){e.exports=a.p+"assets/img/dac-demo.4bc63a17.gif"},360:function(e,t,a){e.exports=a.p+"assets/img/dac-superuser.f16d13f4.png"},361:function(e,t,a){e.exports=a.p+"assets/img/byob-demo.ac920772.gif"},396:function(e,t,a){"use strict";a.r(t);var n=a(42),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"introduction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v('This is the design architecture documentation for the "'),n("strong",[e._v("Delegated Admin Console")]),e._v('" aka '),n("a",{attrs:{href:"https://github.com/oktadeveloper/okta-dac",target:"_blank",rel:"noopener noreferrer"}},[e._v("okta-dac"),n("OutboundLink")],1),e._v(" sample project "),n("em",[e._v('and its companion project: "'),n("strong",[e._v("End-user Dashboard")]),e._v('" aka '),n("a",{attrs:{href:"https://github.com/oktadeveloper/byob-dashboard",target:"_blank",rel:"noopener noreferrer"}},[e._v("byob-dashboard"),n("OutboundLink")],1)]),e._v(".")]),e._v(" "),n("p",[e._v("Using native Okta capabilities, we:")]),e._v(" "),n("ol",[n("li",[n("strong",[e._v('Add a "tenant" layer to an Okta Org')]),e._v(" using custom setup of "),n("RouterLink",{attrs:{to:"/guide/architecture.html#groups"}},[e._v("Groups")]),e._v(" and "),n("RouterLink",{attrs:{to:"/guide/architecture.html#group-admin-role"}},[e._v("Roles")])],1),e._v(" "),n("li",[n("strong",[e._v("Provide tenant self-service administration")]),e._v(" by leveraging "),n("RouterLink",{attrs:{to:"/guide/api-design.html#oauth-for-okta"}},[e._v("OAuth for Okta")]),e._v(".\n"),n("ul",[n("li",[e._v("Users in any particular tenant can have 1 of 2 roles: "),n("em",[e._v("User")]),e._v(" and "),n("em",[e._v("Tenant Admin")]),e._v(". Tenant Admins can access the "),n("strong",[e._v("Delegated Admin Console")]),e._v(" app. And all users can access the "),n("strong",[e._v("End-user Dashboard")]),e._v(" app.")])])],1),e._v(" "),n("li",[n("strong",[e._v('Support "bring your own IdP"')]),e._v(" using Okta's "),n("a",{attrs:{href:"https://developer.okta.com/docs/concepts/identity-providers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Inbound Federation"),n("OutboundLink")],1),e._v(" functionality")]),e._v(" "),n("li",[n("strong",[e._v("Protect API resources")]),e._v(" with Okta's "),n("RouterLink",{attrs:{to:"/guide/api-design.html#api-access-management"}},[e._v("API Access Management")]),e._v(" "),n("ul",[n("li",[e._v("We configure Okta to generate JWTs embedding tenant info; We design our API endpoints to implement tenant-namespace in the request url; And we implement a custom authorizer to restrict access to the tenant-namespaced route based on tenant info embedded in the JWT (the Bearer token of the API request).")])])],1)]),e._v(" "),n("h2",{attrs:{id:"delegated-admin-console"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#delegated-admin-console"}},[e._v("#")]),e._v(" Delegated Admin Console")]),e._v(" "),n("p",[e._v("This App displays two different UX depending on the user's role, which can be one of either 2 ("),n("strong",[e._v("Super Admin")]),e._v(" or "),n("strong",[e._v("Tenant Admin")]),e._v(")")]),e._v(" "),n("h3",{attrs:{id:"super-admin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#super-admin"}},[e._v("#")]),e._v(" Super Admin")]),e._v(" "),n("p",[e._v("The Okta org must be configured to have a "),n("strong",[e._v("SUPERUSERS")]),e._v(" group. Any user assigned to this group will see the Super Admin UI upon logging in to okta-dac:")]),e._v(" "),n("p",[n("img",{attrs:{src:a(360),alt:"alt text"}})]),e._v(" "),n("p",[n("strong",[e._v("Super Admins:")])]),e._v(" "),n("ul",[n("li",[e._v("Add new Tenants")]),e._v(" "),n("li",[e._v("Create the Tenants' first user (the first "),n("a",{attrs:{href:"#tenant-admin"}},[e._v("Tenant Admin")]),e._v(")")]),e._v(" "),n("li",[e._v("Designate which Apps the Tenant can access")]),e._v(" "),n("li",[e._v("Designate email Domains that belong to the Tenant")])]),e._v(" "),n("h3",{attrs:{id:"tenant-admin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tenant-admin"}},[e._v("#")]),e._v(" Tenant Admin")]),e._v(" "),n("p",[n("img",{attrs:{src:a(312),alt:"alt text"}})]),e._v(" "),n("p",[e._v("The Tenant Admin role allows users to self manage their tenants:")]),e._v(" "),n("ul",[n("li",[e._v("Manage Users\n"),n("ul",[n("li",[e._v("Add Users")]),e._v(" "),n("li",[e._v("Update users' profile")]),e._v(" "),n("li",[e._v("Update user statuses (Activate, Deactivate, Suspend, etc.)")]),e._v(" "),n("li",[e._v("Assign Tenant Admin roles to other users")]),e._v(" "),n("li",[e._v("Assign/Unassign Applications to users")])])]),e._v(" "),n("li",[e._v("Self-configure an IdP for SAML Authentication")]),e._v(" "),n("li",[e._v("Self-verify email Domains")])]),e._v(" "),n("h2",{attrs:{id:"end-user-dashboard"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#end-user-dashboard"}},[e._v("#")]),e._v(" End-user Dashboard")]),e._v(" "),n("p",[n("img",{attrs:{src:a(361),alt:"alt text"}})]),e._v(" "),n("p",[e._v("The End-user Dashboard is the companion app to okta-dac. Users login to this application to:")]),e._v(" "),n("ul",[n("li",[e._v("Access SSO Applications assigned to them")]),e._v(" "),n("li",[e._v("Manage their own profile:\n"),n("ul",[n("li",[e._v("Update profile")]),e._v(" "),n("li",[e._v("Change password")]),e._v(" "),n("li",[e._v("Enroll/unenroll other factors")])])])]),e._v(" "),n("hr"),e._v(" "),n("h2",{attrs:{id:"next-steps"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#next-steps"}},[e._v("#")]),e._v(" Next Steps")]),e._v(" "),n("p",[e._v("These three user experiences may seem simple on the surface, but leverage very powerful Okta concepts and functionality that we will discuss in the next section. "),n("RouterLink",{attrs:{to:"/guide/architecture.html"}},[e._v("Architecture ->")])],1)])}),[],!1,null,null,null);t.default=s.exports}}]);